@model MessageTemplateModel
@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal" }))
{ 
    @Html.HiddenFor(model => model.RowId)
    @Html.HiddenFor(model => model.IsEdit)
            
    <div class="box hover">
        <div class="title">
            <h4>
                <span class="icon16 brocco-icon-grid"></span><span>Template details</span>
            </h4>
        </div>
        <div class="content">
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.AllowedTokens, new { @class = "span2" })
                        @Html.DisplayFor(m => m.AllowedTokens, new { @class = "span10" })
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.Name, new { @class = "span2" })
                        @Html.TextBoxFor(m => m.Name, new { @class = "span10 readonly" })
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.BccEmailAddresses, new { @class = "span2" })
                        @Html.TextBoxFor(m => m.BccEmailAddresses, new { @class = "span10" })
                        @Html.ValidationMessageFor(m => m.BccEmailAddresses)
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.Subject, new { @class = "span2" })
                        @Html.TextBoxFor(m => m.Subject, new { @class = "span10" })
                        @Html.ValidationMessageFor(m => m.Subject)
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.Body, new { @class = "span2" })
                        <div class="span10">
                            @Html.EditorFor(m => m.Body, "RichEditor")
                            @Html.ValidationMessageFor(m => m.Body)
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.IsActive, new { @class = "span2" })
                        <div class="span10 controls">
                            <div class="iToggle-button left marginR10">
                                <input type="checkbox" class="nostyle" @if (Model.IsActive)
                                                                       {<text>checked="checked"</text>} data-element="@Html.FieldIdFor(m => m.IsActive)" />
                            </div>
                            @Html.HiddenFor(m => m.IsActive)
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-row row-fluid">
                <div class="span12">
                    <div class="row-fluid">
                        @Html.LabelFor(m => m.EmailAccountId, new { @class = "span2" })
                        <div class="span10 controls">
                            @Html.DropDownListFor(m => m.EmailAccountId, new SelectList(Model.AvailableEmailAccounts, "RowId", "DisplayName", Model.EmailAccountId), new { @class = "nostyle", style = "width:100%;" })
                            @Html.ValidationMessageFor(m => m.EmailAccountId)
                        </div>
                    </div>
                </div>
            </div>            
            <div class="form-actions">
                <button type="submit" class="btn btn-info marginR10" name="save" value="save">
                    @T("Common.Save")</button>
                <button type="button" class="btn btn-danger href-action" data-href="@Url.Action("index")">
                    @T("Common.Cancel")</button>
            </div>
        </div>
    </div>
}