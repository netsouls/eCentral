@model ActivityLogSearchModel
@{
    var pageHeading = T("PageTitle.AuditHistory").Text;
    Html.AddTitleParts(pageHeading);
    ViewBag.Heading = pageHeading;
    ViewBag.HasDataTable = true;
}
<div class="row-fluid">
    <div class="span12">
        @Html.Partial("_AuditSearch", Model)
    </div>
    <!-- End .span12 -->
</div>
<div class="row-fluid">
    <div class="span12">
        <div class="box gradient">
            <div class="title">
                @Html.Partial("ActionList", new ActionListModel())
            </div>
            <div class="content noPad">
                <table cellpadding="0" cellspacing="0" border="0" class="dynamicTable display table table-bordered"
                    id="myDataTable" width="100%">
                    <thead>
                        <tr>
                            <th>
                                Action Type
                            </th>
                            <th>
                                User
                            </th>
                            <th>
                                Message
                            </th>
                            <th>
                                Created on
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
        <!-- End .box -->
    </div>
    <!-- End .span12 -->
</div>
@section inlineScripts {
    <script type="text/javascript">
        $(document).ready(function (e) {
            // cache search variables
            var $activityLogTypeId = $('#@Html.FieldIdFor(m => m.ActivityLogTypeId)');
            var $userId = $('#@Html.FieldIdFor(m => m.UserId)');
            var $createdOnFrom = $('#@Html.FieldIdFor(m => m.CreatedOnFrom)');
            var $createdOnTo = $('#@Html.FieldIdFor(m => m.CreatedOnTo)');

            appEngine.util.setDataTable('myDataTable', '@Url.Action(SystemRouteNames.List)',
                function (aoData) {
                    aoData.push({ 'name': '@Html.FieldIdFor(m => m.ActivityLogTypeId)', 'value': $activityLogTypeId.val() });
                    aoData.push({ 'name': '@Html.FieldIdFor(m => m.UserId)', 'value': $userId.val() });
                    aoData.push({ 'name': '@Html.FieldIdFor(m => m.CreatedOnFrom)', 'value': $createdOnFrom.val() });
                    aoData.push({ 'name': '@Html.FieldIdFor(m => m.CreatedOnTo)', 'value': $createdOnTo.val() });
                },
                [
                    { 'sName': 'Name', 'mData': 'ActivityLogTypeName', 'bSearchable': false, 'bSortable': false },
                    { 'sName': 'UserName', 'mData': 'UserName', 'bSearchable': false, 'bSortable': false },
                    { 'sName': 'Comment', 'mData': 'VersionControl', 'bSearchable': false, 'bSortable': false,
                        'mRender': function (data, type, full) {
                            if (full.Comments.length > 0)
                                return full.Comments + ' - ' + full.VersionControl;

                            return data;
                        }
                    },
                    { 'sName': 'CreatedOn', 'mData': 'CreatedOn', 'bSearchable': false, 'bSortable': false }
                ], true, false, function (dataTable) {
                    $('#search-filter, #search-filter-clear').click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('btn-inverse')) {
                            $activityLogTypeId.val(appEngine.util.emptyGUID);$userId.val(appEngine.util.emptyGUID);
                            $createdOnFrom.val(''); $createdOnTo.val(''); $.uniform.update();
                            $('#search-filter-clear').hide();
                        }
                        else {
                            $('#search-filter-clear').show();
                        }
                        dataTable.fnReloadAjax();});
                });
                appEngine.util.setModalAction();
        });
    </script>
}
